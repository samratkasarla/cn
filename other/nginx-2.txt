

simple and block directives.

simple directives are terminated by semi colon.

but block directive end with pair of curly braces {}.

block directive can contain other directive inside it, which is called context.

there are four core contexts in nginx
======================================

1. events {}
>>used to set global configuration.
>>there can be only one event context in valid configuration file.

2. http {}.
>> there can be only one http context in valid configuration file.

3. server {}
>> Nested inside http context.
>> there can be multiple context.
>> each server context is considered as virtual host.

4. main
>>the configuration file itself
>>anything written outside of these three context.

## Contexts in nginx are like scope in other programming language.

## Running two separate applications under different server names in the same server.

http {
    server {
        listen 80;
        server_name library.test;

        return 200 "your local library!\n";
    }


    server {
        listen 80;
        server_name librarian.library.test;

        return 200 "welcome dear librarian!\n";
    }
}

## To Make this demo work on your system, we will have to update our hosts file to include these two domain names as well:
/etc/hosts
192.168.20.20   library.test
192.168.20.20   librarian.library.test

###  Now how to deliver static content to the requester.

/srv contains the site specific data.

/etc/mime.types

###Dynamic routing in Nginx


events {

}

http {

    server {

        listen 80;
        server_name nginx-handbook.test;

        location /agatha {
            return 200 "Miss Marple.\nHercule Poirot.\n";
        }
    }
}

###variables in nginx

benefits of nginx over apache
ssl
nginx as a load balancer.

PM2 and Daemonizing 

## An upstream in NGINX is a collection of servers that can be treated as a single backend.

## To determine the number of CPUs on your server is
nproc  ---on linux

##the number of files your operating system is allowed to open per core
ulimit -n

## It passes uniform Resource identifier (URI) to interpret the client requests.










